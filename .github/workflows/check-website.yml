name: Check Website Availability

on:
  schedule:
    - cron: '*/2 * * * *' # Runs every 2 minutes
  workflow_dispatch: # Allows manual triggering

jobs:
  check-website:
    runs-on: ubuntu-latest

    steps:
      - name: Update CA Certificates
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates
          sudo update-ca-certificates

      - name: Check Google Availability
        id: check-google
        run: |
          for attempt in {1..3}; do
            STATUS=$(curl -s -o /dev/null -w '%{http_code}' --max-time 10 https://www.google.com)
            if [ $? -eq 0 ]; then
              break
            else
              echo "Attempt $attempt to reach www.google.com failed. Retrying in 5 seconds..."
              sleep 5
            fi
          done

          if [ -z "$STATUS" ]; then
            echo "Error: Could not connect to www.google.com after 3 attempts."
            exit 1
          fi

          echo "status=$STATUS" >> $GITHUB_OUTPUT
          if [ "$STATUS" != "200" ]; then
            echo "www.google.com is down! Status code: $STATUS"
            exit 1
          else
            echo "www.google.com is up! Status code: $STATUS"
          fi
        shell: bash

      - name: Check Portal Availability
        id: check-portal
        run: |
          for attempt in {1..3}; do
            # Capture status and location header, with verbose output
            STATUS=$(curl -s -o /dev/null -w '%{http_code}' --max-time 10 --insecure -I https://portal.minv.sk/wps/portal/!ut/p/a1/jdFBD4IgGAbgn8QLIcoRygDLnJWrvDRPza2sQ-v3R60O1sK-G9vzMt4PUpMtqbvm1h6aa3vumuPjXIs9xzi12QyZkWqEUmimoqIAwD3YeYAfo9DPYxlNUVJjdW7AwNkrHwC9fGLX_tLZNLKyXIxg6Gf-G_TyRU4FVJWvtZIVg3m_f2yU5fH80ShhcBNtJ7HMASf-ywfAwP42pH4SypijeuVJUkoo40TMUk2R0AHg8AKhDk8Q-qRgTURDgJPLqfKzRetadwfspzGT/dl5/d5/L2dBISEvZ0FBIS9nQSEh/ 2> curl_output.log)
            LOCATION=$(curl -s -o /dev/null -w '%{redirect_url}' --max-time 10 --insecure -I https://portal.minv.sk/wps/portal/!ut/p/a1/jdFBD4IgGAbgn8QLIcoRygDLnJWrvDRPza2sQ-v3R60O1sK-G9vzMt4PUpMtqbvm1h6aa3vumuPjXIs9xzi12QyZkWqEUmimoqIAwD3YeYAfo9DPYxlNUVJjdW7AwNkrHwC9fGLX_tLZNLKyXIxg6Gf-G_TyRU4FVJWvtZIVg3m_f2yU5fH80ShhcBNtJ7HMASf-ywfAwP42pH4SypijeuVJUkoo40TMUk2R0AHg8AKhDk8Q-qRgTURDgJPLqfKzRetadwfspzGT/dl5/d5/L2dBISEvZ0FBIS9nQSEh/)
            if [ $? -eq 0 ]; then
              break
            else
              echo "Attempt $attempt to reach portal.minv.sk failed. Retrying in 5 seconds..."
              cat curl_output.log # Log curl errors
              sleep 5
            fi
          done

          echo "Verbose curl output for portal.minv.sk:"
          cat curl_output.log # Display curl output
          echo "Redirect URL (if any): $LOCATION"

          if [ -z "$STATUS" ]; then
            echo "Error: Could not connect to portal.minv.sk after 3 attempts."
            exit 1
          fi

          echo "status=$STATUS" >> $GITHUB_OUTPUT
          # Treat 200 and 302 as valid
          if [ "$STATUS" != "200" ] && [ "$STATUS" != "302" ]; then
            echo "portal.minv.sk is down! Status code: $STATUS"
            exit 1
          else
            echo "portal.minv.sk is up! Status code: $STATUS"
            if [ -n "$LOCATION" ]; then
              echo "Redirected to: $LOCATION"
            fi
          fi
        shell: bash

      - name: Check Redirect URL (Optional)
        if: steps.check-portal.outputs.status == '302'
        id: check-redirect
        run: |
          LOCATION=$(curl -s -o /dev/null -w '%{redirect_url}' --max-time 10 --insecure -I https://portal.minv.sk)
          if [ -n "$LOCATION" ]; then
            echo "Checking redirect URL: $LOCATION"
            STATUS=$(curl -s -o /dev/null -w '%{http_code}' --max-time 10 --insecure -L $LOCATION)
            if [ -z "$STATUS" ]; then
              echo "Error: Could not connect to redirect URL $LOCATION"
              exit 1
            fi
            echo "redirect_status=$STATUS" >> $GITHUB_OUTPUT
            if [ "$STATUS" != "200" ]; then
              echo "Redirect URL $LOCATION is down! Status code: $STATUS"
              exit 1
            else
              echo "Redirect URL $LOCATION is up! Status code: $STATUS"
            fi
          fi
        shell: bash
